From 8d6d745b1946563ac6f9a3b0bfa282df2a4bdc0d Mon Sep 17 00:00:00 2001
From: Alexey Morozov <alexey.morozov.is@gmail.com>
Date: Wed, 26 May 2021 18:59:02 +0300
Subject: [PATCH 6/7] main function

---
 ruby/main.c | 85 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 85 insertions(+)

diff --git a/ruby/main.c b/ruby/main.c
index 4b2675bc..bf8e4f3e 100644
--- a/ruby/main.c
+++ b/ruby/main.c
@@ -25,9 +25,94 @@
 #include <stdlib.h>
 #endif

+#include "ruby_packer.h"
+#ifdef _WIN32
+#include <direct.h>
+#else
+#include <unistd.h>
+#endif
+extern SQUASH_OS_PATH mkdir_workdir;
+extern char *ruby_packer_mkdir_scope;
+
 int
 main(int argc, char **argv)
 {
+	int ret;
+	sqfs_err ruby_packer_ret;
+#ifdef _WIN32
+	BOOL bool_ret;
+#else
+	int new_argc;
+	char **new_argv;
+	char *argv_memory;
+	size_t i;
+	size_t total_argv_size;
+#endif
+
+	ruby_packer_ret = squash_start();
+	assert(SQFS_OK == ruby_packer_ret);
+	ruby_packer_fs = malloc(sizeof(sqfs));
+	assert(NULL != ruby_packer_fs);
+	memset(ruby_packer_fs, 0, sizeof(sqfs));
+	ruby_packer_ret = sqfs_open_image(ruby_packer_fs, ruby_packer_memfs, 0);
+	assert(SQFS_OK == ruby_packer_ret);
+
+#ifdef _WIN32
+	if (NULL == getenv("RUBY_PACKER_USE_ORIGINAL_RUBY")) {
+#ifdef RUBY_PACKER_ENV_BUNDLE_GEMFILE
+		bool_ret = SetEnvironmentVariable("BUNDLE_GEMFILE", RUBY_PACKER_ENV_BUNDLE_GEMFILE);
+		assert(0 != bool_ret);
+#endif // RUBY_PACKER_ENV_BUNDLE_GEMFILE
+#ifdef RUBY_PACKER_RAILS
+		assert(NULL == mkdir_workdir);
+		ruby_packer_mkdir_scope = "/__ruby_packer_memfs__/local";
+		bool_ret = SetEnvironmentVariable("RUBY_PACKER_RAILS", "1");
+		assert(0 != bool_ret);
+#endif // RUBY_PACKER_RAILS
+	}
+#else // ifdef _WIN32 -----------------------------------------------
+#ifdef RUBY_PACKER_ENTRANCE
+	new_argc = argc;
+	new_argv = argv;
+	argv_memory = NULL;
+	if (NULL == getenv("RUBY_PACKER_USE_ORIGINAL_RUBY")) {
+#ifdef RUBY_PACKER_ENV_BUNDLE_GEMFILE
+		ret = setenv("BUNDLE_GEMFILE", RUBY_PACKER_ENV_BUNDLE_GEMFILE, 1);
+		assert(0 == ret);
+#endif // RUBY_PACKER_ENV_BUNDLE_GEMFILE
+#ifdef RUBY_PACKER_RAILS
+		assert(NULL == mkdir_workdir);
+		ruby_packer_mkdir_scope = "/__ruby_packer_memfs__/local";
+		ret = setenv("RUBY_PACKER_RAILS", "1", 1);
+		assert(0 == ret);
+#endif // RUBY_PACKER_RAILS
+		new_argv = (char **)malloc( (argc + 1) * sizeof(char *));
+		assert(new_argv);
+		new_argv[0] = argv[0];
+		new_argv[1] = RUBY_PACKER_ENTRANCE;
+		for (i = 1; i < argc; ++i) {
+			new_argv[2 + i - 1] = argv[i];
+		}
+		new_argc = argc + 1;
+		/* argv memory should be adjacent. */
+		total_argv_size = 0;
+		for (i = 0; i < new_argc; ++i) {
+			total_argv_size += strlen(new_argv[i]) + 1;
+		}
+		argv_memory = (char *)malloc( (total_argv_size) * sizeof(char));
+		assert(argv_memory);
+		for (i = 0; i < new_argc; ++i) {
+			memcpy(argv_memory, new_argv[i], strlen(new_argv[i]) + 1);
+			new_argv[i] = argv_memory;
+			argv_memory += strlen(new_argv[i]) + 1;
+		}
+		assert(argv_memory - new_argv[0] == total_argv_size);
+		argc = new_argc;
+		argv = new_argv;
+	}
+#endif // RUBY_PACKER_ENTRANCE
+#endif // ifdef _WIN32
+
 #ifdef RUBY_DEBUG_ENV
     ruby_set_debug_option(getenv("RUBY_DEBUG"));
 #endif
--
2.24.3 (Apple Git-128)

